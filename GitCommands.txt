Команды в Git Bash консоли
clear — Очистить консоль

git init - команда создаёт в текущем каталоге новый подкаталог с именем .git, содержащий все необходимые файлы репозитория — структуру Git репозитория.
git add - добавление в репозиторий
git commit -m "Initial Commit" - создает комит 
git branch -M main - это своего рода "менеджер веток". Она умеет перечислять ваши ветки, создавать новые, удалять и переименовывать их.
git branch <name of new branch> - добавить ветку.

git checkout <name of branch> - переместиться на другую ветку, в том числе только что созданную.
git checkout branch <name of new branch> - чаще всего при создании новой ветки git пользователю необходимо сразу же переключиться на нее
git push -u origin main - Если мы хотим запушить нашу ветку, то для этого нужно написать.

git branch - при выполнении этой строки мы получим список существующих веток, где символом * будет отмечена ветка, где вы сейчас находитесь.
git status - чтобы проверить текущее состояние репозитория.
git log - получение списка произведенных изменений.
git log --pretty=oneline -однострочная история.




Навигация
pwd — Показать текущий каталог
ls - Показать файлы в данной папке, кроме скрытых
ls -f — Показать файлы в данной папке, включая и скрытые
cd c:/ — Перейти в конкретный каталог
cd - — Вернуться назад
cd .. — Выйти на 1 уровень вверх
cd ../.. — Выйти на 2 уровня вверх

Создание каталогов
mkdir — Создать папку
cd !$ — Перейти в только что созданную папку
mkdir -p {app1,app2} — Создать сразу несколько папок
mkdir -p app/{css,js} — Создать сразу несколько вложенных папок

Создание файлов
touch index.html — Создать файл index.html
touch app/{css/main.css,js/main.js,index.html} — Создать сразу несколько файлов, никаких лишних пробелов быть не должно

Удаление файлов
touch — позволяет создавать файлы
rm test — Удалить пустую папку test
rm -r test — Удалить папку test с файлами внутри неё

Перемещение файлов
mv app1/*.* app2 — Переместить все файлы из папки app1 в папку app2